{
"description":"final stage1 processing - recompress lane-level bam stream, deplex and final lane-level bamseqchksum",
"version":"2.0",
"subgraph_io":{
	"ports":{
		"inputs":{
			"_stdin_":"bamindexdecoder"
		},
		"outputs":{
			"_stdout_":"bamindexdecoder"
		}
	}
},
"nodes":[
	{
		"id":"bamindexdecoder",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":true,
		"description":"assign RG values to reads based on index tag sequence (BC tag value)",
		"comment":"Actual executable used depends on the value of the bid_implementation parameter: java - use illumina2bam BamIndexDecoder.jar; samtools (default) - use new decode function in samtools",
		"cmd":[
			"bambi", "decode",
			"--metrics-file", {"port":"metrics_file", "direction":"out"},
			{"subst":"barcode_file_flag","required":"yes","ifnull":{"subst_constructor":{"vals":[ "--barcode-file", {"subst":"barcode_file", "required":"yes"} ]}}},
			{"subst":"bid_convert_low_quality_to_no_call_flag","ifnull":{"subst_constructor":{"vals":[ "--convert-low-quality", {"subst":"bid_convert_low_quality_to_no_call"} ]}}},
			{"subst":"bid_max_low_quality_to_convert to_no_call_flag","ifnull":{"subst_constructor":{"vals":[ "--max-low-quality-to-convert", {"subst":"bid_max_low_quality_to_convert_to_no_call"} ]}}},
			{"subst":"bid_max_no_calls_flag","ifnull":{"subst_constructor":{"vals":[ "--max-no-calls", {"subst":"bid_max_no_calls"} ]}}},
			{"subst":"bid_max_mismatches_flag","ifnull":{"subst_constructor":{"vals":[ "--max-mismatches", {"subst":"bid_max_mismatches"} ]}}},
			{"subst":"bid_min_mismatch_delta_flag","ifnull":{"subst_constructor":{"vals":[ "--min-mismatch-delta", {"subst":"bid_min_mismatch_delta"} ]}}},
			{"subst":"bid_change_read_name_flag","ifnull":{"subst_constructor":{"vals":[ "--change-read-name", {"subst":"bid_change_read_name"} ]}}},
			{"subst":"bid_barcode_tag_name_flag","ifnull":{"subst_constructor":{"vals":[ "--barcode-tag-name", {"subst":"bid_barcode_tag_name"} ]}}},
			{"subst":"bid_quality_tag_name_flag","ifnull":{"subst_constructor":{"vals":[ "--quality-tag-name", {"subst":"bid_quality_tag_name"} ]}}},
			{"subst":"bid_input_fmt_flag","ifnull":{"subst_constructor":{"vals":[ "--input-fmt", {"subst":"bid_input_fmt"} ]}}},
			{"subst":"bid_output_fmt_flag","ifnull":{"subst_constructor":{"vals":[ "--output-fmt", {"subst":"bid_output_fmt"} ]}}},
			{"subst":"bid_arbitrary_flags", "comment":"this allows arbitrary sets of flag strings to be inserted in the command" },
			{"subst":"bid_compression_level_flag","ifnull":{"subst_constructor":{"vals":[ "--compression-level", {"subst":"bid_compression_level","ifnull":"0"} ]}}},
			"-"
		]
	},
	{
		"id":"decoder_metrics",
		"type":"RAFILE",
		"name":{"subst":"decoder_metrics", "required":"yes",
			"subst_constructor":{
			"vals":[ {"subst":"qc_check_qc_in_dir"}, "/", {"subst":"rpt"}, ".bam.", {"subst":"decoder_metrics_name","ifnull":"tag_decode.metrics"} ],
			"postproc":{"op":"concat", "pad":""}
			}
		}
	},
	{
		"id":"qc_tag_metrics_check",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":false,
		"comment":"This node is defined as reading stdin, even though this is not true. This bodge is to activate the RAFILE/OUTFILE behaviour and delay execution until after the decoder_metrics output is complete",
		"cmd":[
			"qc",
			"--check=tag_metrics",
			{"subst":"tmc_id_run_flag","required":"yes","ifnull":{"subst_constructor":{"vals":[ "--id_run", {"subst":"tmc_id_run", "ifnull":{"subst":"qc_check_id_run"}} ],"postproc":{"op":"concat","pad":"="}}}},
			{"subst":"tmc_position_flag","required":"yes","ifnull":{"subst_constructor":{"vals":[ "--position", {"subst":"tmc_position", "ifnull":{"subst":"qc_check_position"}} ],"postproc":{"op":"concat","pad":"="}}}},
			{"subst":"tmc_qc_in","required":"yes","ifnull":{"subst_constructor":{"vals":[ "--qc_in", {"subst":"tmc_qc_in_dir", "ifnull":{"subst":"qc_check_qc_in_dir"}} ],"postproc":{"op":"concat","pad":"="}}}},
			{"subst":"tmc_qc_out","required":"yes","ifnull":{"subst_constructor":{"vals":[ "--qc_out", {"subst":"tmc_qc_out_dir", "ifnull":{"subst":"qc_check_qc_out_dir"}} ],"postproc":{"op":"concat","pad":"="}}}}
		],
		"description":"run the qc tag_metrics check"
	}
],
"edges":[
	{ "id":"decoder_to_metrics", "from":"bamindexdecoder:metrics_file", "to":"decoder_metrics" },
	{ "id":"decoder_metrics_to_qc_tag_metrics", "from":"decoder_metrics", "to":"qc_tag_metrics_check" }
]
}

