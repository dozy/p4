{
"version":"1.0",
"description":"run bwa aln to to align input bam to supplied reference genome; cat nodes used to avoid creation of intermediate files",
"subgraph_io":{
	"ports":{
		"inputs":{
			"_stdin_":"tee4",
			"reference":["bwa_aln_1:__REFERENCE_GENOME_FASTA_IN__", "bwa_aln_2:__REFERENCE_GENOME_FASTA_IN__", "bwa_sampe:__REFERENCE_GENOME_FASTA_IN__"]
		},
		"outputs":{
			"_stdout_":"samtobam"
		}
	}
},
"subst_params":[
        {
                "id": "basic_pipeline_params",
                "type":"SPFILE",
		"name":{"subst":"basic_pipeline_params_file"},
                "required": "no",
                "comment":"this will expand to a set of subst_param elements"
        }
],
"nodes":[
	{
		"id":"tee4",
		"type":"EXEC",
		"cmd":[ "teepot", {"subst":"teepot_vflag", "ifnull":"-v"}, "-w", "300", "-m", "1G", "__ALN_1_OUT__", "__ALN_2_OUT__", "__SAMPE_1_OUT__", "__SAMPE_2_OUT__" ]
	},
	{
		"id":"bwa_aln_1",
		"type":"EXEC",
		"cmd":[ {"subst":"bwa_executable"}, "aln", "-t", {"subst":"aligner_numthreads"}, "-b1", "__REFERENCE_GENOME_FASTA_IN__", "__BAM_IN__" ]
	},
	{
		"id":"bwa_aln_2",
		"type":"EXEC",
		"cmd":[ {"subst":"bwa_executable"}, "aln", "-t", {"subst":"aligner_numthreads"}, "-b2", "__REFERENCE_GENOME_FASTA_IN__", "__BAM_IN__" ]
	},
        {
                "id":"simple_cat1",
                "type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":true,
                "cmd":"cat"
        },
        {
                "id":"simple_cat2",
                "type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":true,
                "cmd":"cat"
        },
        {
                "id":"bwa_sampe",
                "type":"EXEC",
		"cmd":[ {"subst":"bwa_executable"}, "sampe", "__REFERENCE_GENOME_FASTA_IN__", "__SAI_1_IN__", "__SAI_2_IN__", "__BAM_1_IN__", "__BAM_2_IN__" ]
        },
        {
                "id":"samtobam",
                "type":"EXEC",
                "cmd":[
			"scramble",
			{"subst":"s2b_compress_level", "ifnull":"-0"},
			{"subst":"s2b_mt", "ifnull":{"subst_constructor":{ "vals":[ "-t", {"subst":"s2b_mt_val"} ]}}},
			{"subst":"s2b_fmtver", "ifnull":{"subst_constructor":{ "vals":[ "-V", {"subst":"s2b_format_version"} ]}}},
			"-I", "sam",
			"-O", "bam"
		]
        }
],
"edges":[
	{ "id":"bwa_aln_bam1", "from":"tee4:__ALN_1_OUT__", "to":"bwa_aln_1:__BAM_IN__" },
	{ "id":"bwa_aln_bam2", "from":"tee4:__ALN_2_OUT__", "to":"bwa_aln_2:__BAM_IN__" },
	{ "id":"tee_to_cat1", "from":"tee4:__SAMPE_1_OUT__", "to":"simple_cat1" },
	{ "id":"cat1_to_sampe1", "from":"simple_cat1", "to":"bwa_sampe:__BAM_1_IN__" },
	{ "id":"tee_to_cat2", "from":"tee4:__SAMPE_2_OUT__", "to":"simple_cat2" },
	{ "id":"cat1_to_sampe2", "from":"simple_cat2", "to":"bwa_sampe:__BAM_2_IN__" },
	{ "id":"aln1_sai_to_sampe", "from":"bwa_aln_1", "to":"bwa_sampe:__SAI_1_IN__" },
	{ "id":"aln2_sai_to_sampe", "from":"bwa_aln_2", "to":"bwa_sampe:__SAI_2_IN__" },
	{ "id":"bwa_sampe_to_scramble", "from":"bwa_sampe", "to":"samtobam" }
]
}
