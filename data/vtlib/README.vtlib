

* Usage:
$ vtfp.pl -l aln_vtf.log -o aln.json \
-keys indatadir -vals <INPUT_DATA_DIRECTORY> \
-keys outdatadir -vals <OUTPUT_DATA_DIRECTORY> \
-keys cfgdatadir -vals <TEMPLATE_LIB_DIRECTORY> \
-keys tmpdir -vals <TEMPORARY_DATA_DIRECTORY> \
-keys rpt -vals <IDRUN_POSITION[#TAGINDEX]> \
-keys alignment_method -vals <ALIGNMENT_TEMPLATE_JSON> \
-keys reposdir -vals <REFERENCE_REPOSITORY_ROOT> \
-keys alignment_reference_genome_name -vals <PATH_TO_ALIGNER_REFERENCE_FROM_ROOT> \
-keys reference_dict_name -vals <PATH_TO_PICARD_DICT_TARGET_REFERENCE_FROM_ROOT> \
-keys reference_genome_fasta_name -vals <PATH_TO_FASTA_REFERENCE_FROM_ROOT> \
-keys phix_reference_genome_fasta_name -vals <PATH_TO_FASTA_PHIX_REFERENCE_FROM_ROOT> \
-keys aligner_numthreads -vals <NUMBER_OF_THREADS_USED_BY_ALIGNER> \
cfgdata/wtsi_alignment_stage2_template.json 

$ viv.pl -x -s -v 3 -o viv_run.log aln.json

* vtfp.pl flags (subst_params) description:
 indatadir - input data, default to '.'
 outdatadir - output data, default to '.'
 cfgdatadir - where template files for subgraphs (VTFILE nodes) are kept, default to '.'
 tmpdir - temporary data, default to '.'
 rpt - [r]un_[p]osition#[t]agindex, string used to construct several default file names
 alignment_method - the name of the template file containing the alignment steps (without the ".json" suffix)
 repos_dir - root of the reference repository, useful for when the various reference formats appear in a common location
 alignment_reference_genome_name - path from the repos_dir to the reference needed by the selected aligner
 reference_dict_name - picard reference_dict for target, used to reconstruct bam header SQ lines after alignment
 reference_genome_fasta_name - path from reposdir to fasta reference for target, used by scramble to create cram files
 phix_reference_genome_fasta_name - path from reposdir to fasta reference for phix, used by scramble to create cram files
 aligner_numthreads - number of threads used bny the aligner, for aligners which have this feature


Examples:
bwa aln:
$ vtfp.pl -l aws2_bwa_aln.vtf.log -o aws2_bwa_aln.json -keys indatadir -vals indata -keys outdatadir -vals outdata_bwa_aln -keys cfgdatadir -vals cfgdata -keys tmpdir -vals tmpdata -keys rpt -vals 13430_8#1 -keys alignment_method -vals bwa_aln -keys reposdir -vals /paths/to/references -keys alignment_reference_genome_name -vals Homo_sapiens/1000Genomes_hs37d5/all/bwa/hs37d5.fa -keys reference_dict_name -vals Homo_sapiens/1000Genomes_hs37d5/all/picard/hs37d5.fa.dict -keys reference_genome_fasta_name -vals Homo_sapiens/1000Genomes_hs37d5/all/fasta/hs37d5.fa -keys phix_reference_genome_fasta_name -vals PhiX/default/all/fasta/phix_unsnipped_short_no_N.fa -keys aligner_numthreads -vals 8 cfgdata/alignment_wtsi_stage2_template.json 

bwa mem:
$ vtfp.pl -l aws2_bwa_mem.vtf.log -o aws2_bwa_mem.json -keys indatadir -vals indata -keys outdatadir -vals outdata_bwa_mem -keys cfgdatadir -vals cfgdata -keys tmpdir -vals tmpdata -keys rpt -vals 13430_8#1 -keys alignment_method -vals bwa_mem -keys reposdir -vals /path/to/references -keys alignment_reference_genome_name -vals Homo_sapiens/1000Genomes_hs37d5/all/bwa0_6/hs37d5.fa -keys reference_dict_name -vals Homo_sapiens/1000Genomes_hs37d5/all/picard/hs37d5.fa.dict -keys reference_genome_fasta_name -vals Homo_sapiens/1000Genomes_hs37d5/all/fasta/hs37d5.fa -keys phix_reference_genome_fasta_name -vals PhiX/default/all/fasta/phix_unsnipped_short_no_N.fa -keys aligner_numthreads -vals 8 cfgdata/alignment_wtsi_stage2_template.json

tophat2:
$ vtfp.pl -l aws2_tophat2.vtf.log -o aws2_tophat2.json -keys indatadir -vals indata -keys outdatadir -vals outdata_tophat2 -keys cfgdatadir -vals cfgdata -keys tmpdir -vals tmpdata -keys rpt -vals 13430_8#1 -keys alignment_method -vals tophat2 -keys reposdir -vals /path/to/references -keys alignment_reference_genome_name -vals Homo_sapiens/1000Genomes_hs37d5/all/bowtie2/hs37d5.fa -keys reference_dict_name -vals Homo_sapiens/1000Genomes_hs37d5/all/picard/hs37d5.fa.dict -keys reference_genome_fasta_name -vals Homo_sapiens/1000Genomes_hs37d5/all/fasta/hs37d5.fa -keys phix_reference_genome_fasta_name -vals PhiX/default/all/fasta/phix_unsnipped_short_no_N.fa -keys aligner_numthreads -vals 8 cfgdata/alignment_wtsi_stage2_template.json

tophat2 with ysplit:
$ vtfp.pl -l aws2_tophat2_ysplit.vtf.log -o aws2_tophat2_ysplit.json -keys indatadir -vals indata -keys outdatadir -vals outdata_tophat2_ysplit -keys cfgdatadir -vals cfgdata -keys tmpdir -vals tmpdata -keys rpt -vals 13430_8#1 -keys alignment_method -vals tophat2 -keys reposdir -vals /path/to/reference_repository -keys alignment_reference_genome_name -vals references/Homo_sapiens/1000Genomes_hs37d5/all/bowtie2/hs37d5.fa -keys reference_dict_name -vals references/Homo_sapiens/1000Genomes_hs37d5/all/picard/hs37d5.fa.dict -keys reference_genome_fasta_name -vals references/Homo_sapiens/1000Genomes_hs37d5/all/fasta/hs37d5.fa -keys phix_reference_genome_fasta_name -vals references/PhiX/default/all/fasta/phix_unsnipped_short_no_N.fa -keys transcriptome_subpath -vals transcriptomes/Homo_sapiens/ensembl_75_transcriptome/1000Genomes_hs37d5/tophat2/1000Genomes_hs37d5.known -keys aligner_numthreads -vals 8 -keys library_type -vals fr-firststrand -keys final_output_prep_target_name -vals split_by_chromosome -keys split_bam_by_chromosome_flags -vals S=Y -keys split_bam_by_chromosome_flags -vals V=true -keys split_indicator -vals _yhuman cfgdata/alignment_wtsi_stage2_template.json

