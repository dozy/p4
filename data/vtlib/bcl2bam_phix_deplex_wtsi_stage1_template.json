
{
"description":"This pipeline starts with Illumina2Bam, and ends by running SplitBamByReadGroup to create separate BAM files for each sample.",
"version":"1.0",
"subst_params":[
	{
		"id":"basic_pipeline_params_file",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"cfgdatadir"}, "/", "alignment_common.json" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{"id":"rpt","description":"Run/Position/TagIndex, though here it is generally only Run/Position. Used in defaults/constructors for i2b_rg,decoder_metrics,md5_file,seqchksum_file,spatial_filter_file,pre_spatial_filter_bam and filtered_bam"},
	{"id":"i2b_runfolder","description":"path to runfolder. Provides a base on which platform unit, intensities directory and (indirectly) basecalls directories can be constructed"},
	{
		"id":"i2b_intensity_dir",
		"required":"yes",
		"description":"Illumina intensities directory including config xml file, and clocs, locs or pos files under lane directory, using Data/Intensities directory under runfolder if not given",
		"subst_constructor":{
			"vals":[ {"subst":"i2b_runfolder","required":"yes"}, "/", {"subst":"i2b_data_intensities_dir_suffix","ifnull":"Data/Intensities"} ],
			"postproc":{"op":"concat","pad":""}
		}
	},
	{
		"id":"i2b_basecalls_dir",
		"required":"no",
		"description":"Illumina basecalls directory including config xml file, and filter files, bcl, maybe scl files under lane cycle directory, using BaseCalls directory under intensities if not given.",
		"subst_constructor":{
			"vals":[ {"subst":"i2b_intensity_dir","required":"yes"}, "/", {"subst":"i2b_basecalls_dir_suffix","ifnull":"BaseCalls"} ],
			"postproc":{"op":"concat","pad":""}
		}
	},
	{"id":"i2b_lane","required":"yes","comment":"Lane number"},
	{
		"id":"i2b_pu",
		"description":"The platform unit, using runfolder name plus lane number if not given",
		"subst_constructor":{
			"vals":[ {"subst":"i2b_runfolder"}, "_", {"subst":"i2b_lane"} ],
			"postproc":{"op":"concat","pad":""}
		}
	},
	{"id":"i2b_library_name","description":"The name of the sequenced library"},
	{"id":"i2b_rg", "description":"ID used to link RG header record with RG tag in SAM record", "default":{"subst":"rpt"}},
	{"id":"i2b_bc_seq_val","required":"no","description":"Tag name for barcode sequence. Illumina2bam default is BC"},
	{"id":"i2b_bc_qual_val","required":"no","description":"Tag name for barcode quality. Illumina2bam default is QT"},
	{"id":"i2b_sec_bc_seq_val","required":"no","description":"Tag name for second  barcode sequence. Illumina2bam default is null"},
	{"id":"i2b_sec_bc_qual_val","required":"no","description":"Tag name for second barcode quality. Illumina2bam default is null"},
	{"id":"i2b_study_name","description":"The name of the study"},
	{
		"id":"i2b_sample_aliases",
		"default":"UNSPECIFIED",
		"comment":"produces a comma-separated string from array of i2b_sample_alias values",
		"subst_constructor":{
			"vals":{"subst":"i2b_sample_alias", "ifnull":["UNSPEC"]},
			"postproc":{"op":"concat","pad":","}
		}
	},
	{
		"id":"i2b_sample_alias_flag",
		"required":"yes",
		"subst_constructor":{
			"vals":["SAMPLE_ALIAS",{"subst":"i2b_sample_aliases"}],
			"postproc":{"op":"concat","pad":"="}
		}
	},
	{"id":"decoder_metrics_name","required":"no","default":"tag_decode.metrics"},
	{
		"id":"decoder_metrics",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"rpt"}, ".bam.", {"subst":"decoder_metrics_name","ifnull":"tag_decode.metrics"} ],
			"postproc":{"op":"concat", "pad":""}
		}
	},

	{"id":"phix_alignment_method","required":"no","default":"bwa_aln"},
        {
                "id":"alignment_vtf",
                "required":"yes",
                "subst_constructor":{
                        "vals":[ {"subst":"cfgdatadir"}, "/", {"subst":"phix_alignment_method"}, "_alignment.json" ],
                        "postproc":{"op":"concat", "pad":""}
                }
        },
	{"id":"split_prefix","required":"yes", "default":{"subst":"outdatadir"}},
	{
		"id":"split_format",
		"required":"no",
		"subst_constructor":{
			"vals":[
				{"subst":"split_prefix"},
				"/",
				"%!.bam"
			],
			"postproc":{"op":"concat","pad":""}
		}
	},
	{
		"id":"md5_file",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"rpt"}, ".bam.md5" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
        {
                "id":"seqchksum_file",
                "required":"yes",
                "subst_constructor":{
                        "vals":[ {"subst":"outdatadir"}, "/", {"subst":"rpt"}, ".seqchksum" ],
                        "postproc":{"op":"concat", "pad":""}
                }
        },
	{
		"id":"spatial_filter_file",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"rpt"}, "_spatial_filter.dat" ],
			"postproc":{"op":"concat","pad":""}
		}
	},
	{
		"id":"pre_spatial_filter_bam",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"tmpdir"}, "/", {"subst":"rpt"}, "_psf.bam" ],
			"postproc":{"op":"concat","pad":""}
		}
	},
	{
		"id":"filtered_bam",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"outdatadir"}, "/", {"subst":"rpt"}, "_filtered.bam" ],
			"postproc":{"op":"concat","pad":""}
		}
	},
	{"id":"refname_phix","required":"yes"},
	{
		"id":"reference_phix",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"reposdir"}, "/", {"subst":"refname_phix"} ],
			"postproc":{"op":"concat", "pad":""}
		}
	}
],
"nodes":[
	{
		"id":"illumina2bam",
		"type":"EXEC",
		"use_STDIN":false,
		"use_STDOUT":true,
		"cmd":[
			{"subst":"java_cmd","ifnull":"java","required":"yes"},
			"-Xmx1024m",
			"-jar",{"subst":"illumina2bam_jar","required":"yes","ifnull":"/software/npg/java_jars/Illumina2bam.jar"},
			{"subst":"i2b_intensity_flag","required":"yes","ifnull":{"subst_constructor":{"vals":[ "I", {"subst":"i2b_intensity_dir","required":"yes"} ],"postproc":{"op":"concat","pad":"="}}}},
			{"subst":"i2b_basecalls_flag","required":"yes","ifnull":{"subst_constructor":{"vals":[ "B", {"subst":"i2b_basecalls_dir","required":"yes"} ],"postproc":{"op":"concat","pad":"="}}}},
			{"subst":"i2b_lane_flag","required":"yes","ifnull":{"subst_constructor":{"vals":[ "LANE", {"subst":"i2b_lane","required":"yes"} ],"postproc":{"op":"concat","pad":"="}}}},
			{"subst":"i2b_pu_flag","ifnull":{"subst_constructor":{"vals":[ "PU", {"subst":"i2b_pu"} ],"postproc":{"op":"concat","pad":"="}}}},
			{"subst":"i2b_rg_flag","ifnull":{"subst_constructor":{"vals":[ "READ_GROUP_ID", {"subst":"i2b_rg"} ],"postproc":{"op":"concat","pad":"="}}}},
			{"subst":"i2b_bc_seq_flag","ifnull":{"subst_constructor":{"vals":[ "BC_SEQ", {"subst":"i2b_bc_seq_val"} ],"postproc":{"op":"concat","pad":"="}}}},
			{"subst":"i2b_bc_qual_flag","ifnull":{"subst_constructor":{"vals":[ "BC_QUAL", {"subst":"i2b_bc_qual_val"} ],"postproc":{"op":"concat","pad":"="}}}},
			{"subst":"i2b_sec_bc_seq_flag","ifnull":{"subst_constructor":{"vals":[ "SEC_BC_SEQ", {"subst":"i2b_sec_bc_seq_val"} ],"postproc":{"op":"concat","pad":"="}}}},
			{"subst":"i2b_sec_bc_qual_flag","ifnull":{"subst_constructor":{"vals":[ "SEC_BC_QUAL", {"subst":"i2b_sec_bc_qual_val"} ],"postproc":{"op":"concat","pad":"="}}}},
			{"subst":"i2b_first_tile_flag","ifnull":{"subst_constructor":{"vals":[ "FIRST_TILE", {"subst":"i2b_first_tile"} ],"postproc":{"op":"concat","pad":"="}}}},
			{"subst":"i2b_tile_limit_flag","ifnull":{"subst_constructor":{"vals":[ "TILE_LIMIT", {"subst":"i2b_tile_limit"} ],"postproc":{"op":"concat","pad":"="}}}},
			{"subst":"i2b_library_flag","ifnull":{"subst_constructor":{"vals":[ "LIBRARY_NAME", {"subst":"i2b_library_name"} ],"postproc":{"op":"concat","pad":"="}}}},
			{"subst":"i2b_study_name_flag","ifnull":{"subst_constructor":{"vals":[ "STUDY_NAME", {"subst":"i2b_study_name"} ],"postproc":{"op":"concat","pad":"="}}}},
			{"subst":"i2b_sample_alias_flag","ifnull":{"subst_constructor":{"vals":[ "SAMPLE_ALIAS", {"subst":"i2b_sample_aliases"} ],"postproc":{"op":"concat","pad":"="}}}},
			"OUTPUT=/dev/stdout",
			"COMPRESSION_LEVEL=0"
		],
		"description":"Create the initial BAM file from the data generated by the Illumina machine"
	},
	{
		"id":"tee_i2b",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":false,
                "cmd":
			[
				"teepot",
				{"subst":"ti2b_tmpdirflag","ifnull":{"subst_constructor":{"vals":[ "-t", {"subst":"tee_i2b_teepot_tempdir", "ifnull":{"subst":"teepot_tempdir"}} ]}}},
				{"subst":"teepot_vflag", "ifnull":"-v"},
				{"subst":"ti2b_wflag","ifnull":{"subst_constructor":{"vals":[ "-w", {"subst":"tee_i2b_teepot_wval", "ifnull":{"subst":"teepot_wval"}} ]}}},
				{"subst":"ti2b_mflag","ifnull":{"subst_constructor":{"vals":[ "-m", {"subst":"tee_i2b_teepot_mval", "ifnull":"2M"} ]}}},
				"__SCS_OUT__",
				"__BAF_OUT__"
			]
	},
	{
		"id":"bamadapterfind",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":true,
		"cmd":[ "bamadapterfind" ],
		"description":"Find and mark the adaptors used by Illumina"
	},
	{
		"id":"bamindexdecoder",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":true,
		"cmd":[
			{"subst":"java_cmd","ifnull":"java","required":"yes"},
			"-Xmx1024m",
			"-jar", {"subst":"bamindexdecoder_jar", "ifnull":"/software/npg/java_jars/BamIndexDecoder.jar", "required":"yes"},
			"I=/dev/stdin",
			"O=/dev/stdout",
			"M=__METRICS_FILE_OUT__",
			{"subst":"barcode_file_flag","required":"yes","ifnull":{"subst_constructor":{"vals":[ "BARCODE_FILE", {"subst":"barcode_file", "required":"yes"} ],"postproc":{"op":"concat","pad":"="}}}}
		]
	},
	{
		"id":"decoder_metrics",
		"type":"OUTFILE",
		"name":{"subst":"decoder_metrics"}
	},
	{
		"id":"bamcollate",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":true,
		"cmd":[ "bamcollate2", "collate=2", "level=0" ]
	},
	{
		"id":"tee_collated",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":false,
                "cmd":
			[
				"teepot",
				{"subst":"tctp_tmpdirflag","ifnull":{"subst_constructor":{"vals":[ "-t", {"subst":"tee_collated_teepot_tempdir", "ifnull":{"subst":"teepot_tempdir"}} ]}}},
				{"subst":"teepot_vflag", "ifnull":"-v"},
				{"subst":"tctp_wflag","ifnull":{"subst_constructor":{"vals":["-w",{"subst":"tee_collated_teepot_wval", "ifnull":{"subst":"teepot_wval"}}]}}},
				{"subst":"tctp_mflag","ifnull":{"subst_constructor":{"vals":[ "-m", {"subst":"tee_collated_teepot_mval", "ifnull":"1G"} ]}}},
				"__TD1_OUT__",
				"__TD2_OUT__"
			]
	},
	{
		"id":"simple_cat",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":true,
		"cmd":"cat"
	},
        {
                "id":"alignment_phix",
                "type":"VTFILE",
                "comment":"inputs: _stdin_ (bam), reference; outputs: _stdout_ (bam)",
                "node_prefix":"alnphix_",
                "name":{"subst":"alignment_vtf"},
                "description":"subgraph containing alignment process"
        },
	{
		"id":"reference_phix",
		"type":"INFILE",
		"name":{"subst":"reference_phix"},
		"description":"Prefix for Phix reference"
	},
	{
		"id":"bammerge",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":true,
		"cmd":[ "bam12auxmerge", "level=0", "rankstrip=1", "ranksplit=1", "zztoname=0", "__UNALN_BAM_IN__" ]
	},
	{
		"id":"tee_prefilter",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":false,
                "cmd":
			[
				"teepot",
				{"subst":"tpf_tmpdirflag","ifnull":{"subst_constructor":{"vals":[ "-t", {"subst":"tee_prefilter_teepot_tempdir", "ifnull":{"subst":"teepot_tempdir"}} ]}}},
				{"subst":"teepot_vflag", "ifnull":"-v"},
				{"subst":"tpf_wflag","ifnull":{"subst_constructor":{"vals":[ "-w", {"subst":"tee_prefilter_teepot_wval", "ifnull":{"subst":"teepot_wval"}} ]}}},
				{"subst":"tpf_mflag","ifnull":{"subst_constructor":{"vals":[ "-m", {"subst":"tee_prefilter_teepot_mval", "ifnull":"2M"} ]}}},
				"__PF1_OUT__",
				"__PF2_OUT__"
			]
	},
	{
		"id":"spf_compress",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"comment":"compress temporary file to cram to avoid disk usage bloat",
		"cmd0":[
			"scramble",
			{"subst":"spfc_mt", "ifnull":{"subst_constructor":{ "vals":[ "-t", {"subst":"spfc_mt_val", "ifnull":{"subst":"aligner_numthreads"}} ]}}},
			{"subst":"spfc_fmtver", "ifnull":{"subst_constructor":{ "vals":[ "-V", {"subst":"spfc_format_version"} ]}}},
			{"subst":"spfc_compress_level", "ifnull":"-7"},
			"-I", "bam",
			"-O", "cram",
			{"subst":"spfc_reference_flag", "ifnull":{"subst_constructor":{ "vals":[ "-r", {"subst":"scramble_reference_fasta"} ]}}}
		],
		"cmd":[
			{"subst":"samtools_executable", "ifnull":"samtools1"},
			"view",
			"-C",
			{"subst":"spfc_reference_flag", "ifnull":{"subst_constructor":{ "vals":[ "-T", {"subst":"scramble_reference_fasta","required":"yes"} ]}}},
			"-"
		]
	},
	{
		"id":"spf_uncompress",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"comment":"uncompress temporary cram file created to avoid disk usage bloat",
		"cmd":[
			"scramble",
			{"subst":"spfu_mt", "ifnull":{"subst_constructor":{ "vals":[ "-t", {"subst":"spfu_mt_val", "ifnull":{"subst":"aligner_numthreads"}} ]}}},
			{"subst":"spfu_fmtver", "ifnull":{"subst_constructor":{ "vals":[ "-V", {"subst":"spfu_format_version"} ]}}},
			"-I", "cram",
			"-O", "bam"
		]
	},
	{
		"id":"create_filter",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":true,
		"cmd":[
			"spatial_filter",
			"-c", "-q",
			{"subst":"sp_tvflag","ifnull":{"subst_constructor":{"vals":[ "-t", {"subst":"tileviz_dir"} ]}}},
			"-F", "/dev/stdout", "/dev/stdin"
		],
		"description":"Create a spatial filter"
	},
	{
		"id":"spatial_filter_file",
		"type":"RAFILE",
		"name":{"subst":"spatial_filter_file"},
		"description":"spatial filter file"
	},
	{
		"id":"pre_spatial_filter_bam",
		"type":"RAFILE",
		"name":{"subst":"pre_spatial_filter_bam"},
		"description":"lane-level bam before application of spatial filter file"
	},
	{
		"id":"apply_filter",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":true,
		"cmd":[ "spatial_filter", "-a", "-f", "-q", "-F", "__FILTER_IN__", "/dev/stdin" ],
		"description":"Apply a spatial filter"
	},
	{
		"id":"tee_split",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":false,
                "cmd":
			[
				"teepot",
				{"subst":"ts_tmpdirflag","ifnull":{"subst_constructor":{"vals":[ "-t", {"subst":"tee_split_teepot_tempdir", "ifnull":{"subst":"teepot_tempdir"}} ]}}},
				{"subst":"teepot_vflag", "ifnull":"-v"},
				{"subst":"ts_wflag","ifnull":{"subst_constructor":{"vals":[ "-w", {"subst":"tee_split_teepot_wval", "ifnull":{"subst":"teepot_wval"}} ]}}},
				{"subst":"ts_mflag","ifnull":{"subst_constructor":{"vals":[ "-m", {"subst":"tee_split_teepot_mval", "ifnull":"5M"} ]}}},
				"__MD5_OUT__",
				"__SEQCHKSUM_OUT__",
				"__FILTERED_BAM_OUT__",
				"__SPLIT_BAM_OUT__"
			]
	},
	{
		"id":"md5",
		"type":"EXEC",
		"use_STDIN":true,
		"use_STDOUT":true,
		"cmd":[ "md5sum" ]
	},
	{
		"id":"postprocess_md5",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"cmd":[ "tr", "-d", " \\-\n" ],
		"comment":"the double-backslash is required to get the correct character set to the tr command"
	},
	{ "id":"md5_file", "type":"OUTFILE", "name":{"subst":"md5_file"} },
	{
		"id":"seqchksum",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"cmd":[ "bamseqchksum" ]
	},
	{ "id":"seqchksum_file", "type":"OUTFILE", "name":{"subst":"seqchksum_file"} },
	{
		"id":"filtered_bam",
		"type":"OUTFILE",
		"name":{"subst":"filtered_bam"},
		"description":"BAM file after PhiX alignment and spatial filtering"
	},
	{
		"id":"splitter",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": false,
		"cmd":[ {"subst":"samtools_executable", "ifnull":"samtools1"}, "split", "-f", {"subst":"split_format"}, "-" ],
		"description":"Split the BAM file into separate BAM files by Read Group"
	},
        {
                "id":"final_seqchksum",
                "type":"VTFILE",
                "node_prefix":"scs_",
                "comment":"inputs: _stdin_ (start bam), target_seqchksum",
                "name":{"subst":"seqchksum","required":"yes","ifnull":{"subst_constructor":{ "vals":[ {"subst":"cfgdatadir"}, "/", "seqchksum_stage1.json" ], "postproc":{"op":"concat", "pad":""} }}},
                "description":"subgraph containing seqchksum validation of outputs"
        }
],
"edges":[
	{ "id":"illumina2bam_to_ti2b", "from":"illumina2bam", "to":"tee_i2b" },
	{ "id":"ti2b_to_bamadapterfind", "from":"tee_i2b:__BAF_OUT__", "to":"bamadapterfind" },
	{ "id":"bamadapterfind_to_decoder", "from":"bamadapterfind", "to":"bamindexdecoder" },
	{ "id":"decoder_to_metrics", "from":"bamindexdecoder:__METRICS_FILE_OUT__", "to":"decoder_metrics" },
	{ "id":"bamindexdecoder_to_collate", "from":"bamindexdecoder", "to":"bamcollate" },
	{ "id":"collate_to_tee", "from":"bamcollate", "to":"tee_collated" },
	{ "id":"tee_collated_to_cat", "from":"tee_collated:__TD1_OUT__", "to":"simple_cat" },
	{ "id":"cat_to_merge", "from":"simple_cat", "to":"bammerge:__UNALN_BAM_IN__" },
	{ "id":"tee_collated_to_alignment", "from":"tee_collated:__TD2_OUT__", "to":"alignment_phix" },
	{ "id":"ref_to_alignment", "from":"reference_phix", "to":"alignment_phix:reference" },
	{ "id":"alignment_to_merge", "from":"alignment_phix", "to":"bammerge" },
	{ "id":"merge_to_prefilter", "from":"bammerge", "to":"tee_prefilter" },
	{ "id":"prefilter_to_create_filter", "from":"tee_prefilter:__PF1_OUT__", "to":"create_filter" },
	{ "id":"create_filter_to_filter_file", "from":"create_filter", "to":"spatial_filter_file" },
	{ "id":"filter_file_to_apply_filter", "from":"spatial_filter_file", "to":"apply_filter:__FILTER_IN__" },
	{ "id":"prefilter_to_compress", "from":"tee_prefilter:__PF2_OUT__", "to":"spf_compress" },
	{ "id":"compress_to_tmp_bam", "from":"spf_compress", "to":"pre_spatial_filter_bam" },
	{ "id":"tmp_bam_to_uncompress", "from":"pre_spatial_filter_bam", "to":"spf_uncompress" },
	{ "id":"uncompress_to_apply", "from":"spf_uncompress", "to":"apply_filter" },
	{ "id":"apply_filter_to_tee", "from":"apply_filter", "to":"tee_split" },
	{ "id":"tee_to_md5", "from":"tee_split:__MD5_OUT__", "to":"md5" },
	{ "id":"md5_to_postprocess", "from":"md5", "to":"postprocess_md5" },
	{ "id":"pp_md5_to_file", "from":"postprocess_md5", "to":"md5_file" },
	{ "id":"tee_to_seqchksum", "from":"tee_split:__SEQCHKSUM_OUT__", "to":"seqchksum" },
	{ "id":"seqchksum_to_file", "from":"seqchksum", "to":"seqchksum_file" },
	{ "id":"tee_to_filtered_bam", "from":"tee_split:__FILTERED_BAM_OUT__", "to":"filtered_bam" },
	{ "id":"tee_to_splitter", "from":"tee_split:__SPLIT_BAM_OUT__", "to":"splitter" },
	{ "id":"ti2b_to_bam", "from":"tee_i2b:__SCS_OUT__", "to":"final_seqchksum" },
	{ "id":"fopt_to_scs", "from":"seqchksum_file", "to":"final_seqchksum:target_seqchksum" }

]
}
